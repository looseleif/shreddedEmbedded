#include <SPI.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1325.h>
#include <FastLED.h>
#include <Arduino.h>
#define OLED_CS PB4
#define OLED_RESET PB1
#define OLED_DC PB0

#define NUM_LEDS 15
#define DATA_PIN 23
CRGB leds[NUM_LEDS];

// this is for hardware SPI, fast! but fixed oubs
Adafruit_SSD1325 display(OLED_DC, OLED_RESET, OLED_CS);

  static const unsigned char PROGMEM hearty5050_bmp1[] =
  {  

  0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x0c,0x00,0x00,0x00
  ,0x00,0x00,0x3e,0x21,0x80,0x00,0x00
  ,0x00,0x00,0x81,0x40,0xc0,0x00,0x00
  ,0x00,0x01,0x00,0x80,0x40,0x00,0x00
  ,0x00,0x00,0x00,0x80,0x00,0x00,0x00
  ,0x00,0x02,0x00,0x00,0x20,0x00,0x00
  ,0x00,0x02,0x00,0x00,0x20,0x00,0x00
  ,0x00,0x02,0x00,0x00,0x20,0x00,0x00
  ,0x00,0x01,0x00,0x00,0x20,0x00,0x00
  ,0x00,0x01,0x00,0x00,0x40,0x00,0x00
  ,0x00,0x01,0x00,0x00,0x40,0x00,0x00
  ,0x00,0x00,0x80,0x00,0x80,0x00,0x00
  ,0x00,0x00,0xc0,0x00,0x80,0x00,0x00
  ,0x00,0x00,0x40,0x01,0x00,0x00,0x00
  ,0x00,0x00,0x20,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x10,0x02,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x04,0x00,0x00,0x00
  ,0x00,0x00,0x08,0x08,0x00,0x00,0x00
  ,0x00,0x00,0x04,0x10,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x20,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x40,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  ,0x11,0x11,0x11,0x11,0x00,0x00,0x00 
  
  };

void testdrawbitmap(const uint8_t *bitmap, uint8_t w, uint8_t h) {
  uint8_t icons[10][3];

  randomSeed(666);     // whatever seed


  // initialize
  for (uint8_t f=0; f< 10; f++) {
    icons[f][0] = random(display.width());
    icons[f][1] = 0;
    icons[f][1] = random(5) + 1;
    
    Serial.print("x: ");
    Serial.print(icons[f][0], DEC);
    Serial.print(" y: ");
    Serial.print(icons[f][1], DEC);
    Serial.print(" dy: ");
    Serial.println(icons[f][1], DEC);
  }

  while (1) {
    // draw each icon
    for (uint8_t f=0; f< 10; f++) {
      display.drawBitmap(icons[f][0], icons[f][1], hearty5050_bmp1, w, h, WHITE);
    }
    display.display();
    delay(200);
    
    // then erase it + move it
    for (uint8_t f=0; f< 10; f++) {
      display.drawBitmap(icons[f][0], icons[f][1],  hearty5050_bmp1, w, h, BLACK);
      // move it
      icons[f][1] += icons[f][1];
      // if its gone, reinit
      if (icons[f][1] > display.height()) {
	icons[f][0] = random(display.width());
	icons[f][1] = 0;
	icons[f][1] = random(5) + 1;
      }
    }
   }
}


void testdrawchar(void) {
  display.setTextSize(1);
  display.setTextWrap(true);
  display.setTextColor(WHITE);
  display.setCursor(0,0);

  String myString = "booting\nhomeostasis\ndevice";

  for(uint8_t i = 0U; i<myString.length(); i++){

    display.write(myString[i]);
    delay(10);
  }

}

void testdrawcircle(void) {
  for (uint8_t i=0; i<display.height()/2; i+=2) {
    display.drawCircle(display.width()/2, display.height()/2, i, WHITE);
    display.display();
  }
}


void testdrawrect(void) {
  for (int16_t i=0; i<display.height()/2; i+=2) {
    display.drawRect(i, i, display.width()-2*i, display.height()-2*i, WHITE);
    display.display();
  }
}

void testdrawline() {  
  for (int16_t i=0; i<display.width(); i+=4) {
    display.drawLine(0, 0, i, display.height()-1, WHITE);
    display.display();
  }
  for (int16_t i=0; i<display.height(); i+=4) {
    display.drawLine(0, 0, display.width()-1, i, WHITE);
    display.display();
  }
  delay(250);
  
  display.clearDisplay();
  for (int16_t i=0; i<display.width(); i+=4) {
    display.drawLine(0, display.height()-1, i, 0, WHITE);
    display.display();
  }
  for (int16_t i=display.height()-1; i>=0; i-=4) {
    display.drawLine(0, display.height()-1, display.width()-1, i, WHITE);
    display.display();
  }
  delay(250);
  
  display.clearDisplay();
  for (int16_t i=display.width()-1; i>=0; i-=4) {
    display.drawLine(display.width()-1, display.height()-1, i, 0, WHITE);
    display.display();
  }
  for (int16_t i=display.height()-1; i>=0; i-=4) {
    display.drawLine(display.width()-1, display.height()-1, 0, i, WHITE);
    display.display();
  }
  delay(250);

  display.clearDisplay();
  for (int16_t i=0; i<display.height(); i+=4) {
    display.drawLine(display.width()-1, 0, 0, i, WHITE);
    display.display();
  }
  for (int16_t i=0; i<display.width(); i+=4) {
    display.drawLine(display.width()-1, 0, i, display.height()-1, WHITE); 
    display.display();
  }
  delay(250);
}

void setup()   {                
  
  FastLED.addLeds<WS2812B, DATA_PIN, GRB>(leds, NUM_LEDS);

  // by default, we'll generate the high voltage from the 3.3v line internally! (neat!)
  display.begin();
  // init done

  //display.display(); // show splashscreen
  //delay(50);
  display.clearDisplay();   // clears the screen and buffer


  display.setRotation(0);

  delay(15);

}

int main(){

  init();
  setup();

  while(1){
  
  for(int i = 0; i<NUM_LEDS; i++){

    leds[i] = CRGB(50,0,0);

  }

  FastLED.show();

  display.clearDisplay();
  FastLED.setBrightness(100);


  for(int i = 0; i<NUM_LEDS; i++){

    leds[i] = CRGB(100+(50*i),0,255-(50*i));
    FastLED.show();
    delay(15);

  }

  for(int i=0;i<10;i++){
  testdrawchar();
  delay(500);
  display.endWrite();
  }
  

  for(int i = 0; i<NUM_LEDS; i++){

    leds[i] = CRGB(100+(50*i),0,0);
    FastLED.show();
    delay(15);

  }

  testdrawcircle();
  display.clearDisplay();


  for(int i = 0; i<NUM_LEDS; i++){

    leds[i] = CRGB(0,0,155-(50*i));
    FastLED.show();
    delay(15);

  }

  testdrawrect();
  display.clearDisplay();

  for(int i = 0; i<100; i++){

    FastLED.setBrightness(i);
    FastLED.show();

  }

  delay(100);

  }

  return 0;

}