#include <SPI.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1325.h>
#include <FastLED.h>
#include <Arduino.h>

#define OLED_CS PB4
#define OLED_RESET PB1
#define OLED_DC PB0

#define NUM_LEDS 30
#define DATA_PIN 23
CRGB leds[NUM_LEDS];

Adafruit_SSD1325 display(OLED_DC, OLED_RESET, OLED_CS);

  static const unsigned char PROGMEM hearty100_bmp[] = {  

    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x03,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x06,0xf0,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x66,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0xf6,0xb0,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x03,0xfc,0x27,0xe1,0xf0,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x02,0xdd,0xaf,0xe1,0x78,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x03,0x6c,0xa7,0xb3,0x58,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x03,0x60,0x27,0xff,0xf0,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x01,0x91,0xa7,0x80,0xf3,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x01,0x90,0x2c,0x00,0x1f,0x80,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0xc8,0x38,0x00,0x3e,0xc0,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x40,0x30,0x00,0x1f,0xc0,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x61,0x60,0x00,0x07,0x40,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x23,0xc0,0x05,0x03,0xc0,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x31,0xc0,0x3e,0x01,0x80,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x31,0x80,0x7f,0xfd,0xff,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x13,0x00,0x60,0x7f,0xf1,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x33,0x00,0x40,0x00,0x0d,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x33,0x80,0x80,0x08,0x6f,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x33,0x03,0xa0,0x02,0xff,0x80,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x23,0x01,0x20,0x00,0xb3,0x80,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x63,0x01,0x50,0x00,0x00,0x80,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x62,0x03,0xa0,0x00,0x03,0x80,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0xc2,0x03,0x40,0x7f,0xff,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x01,0xc2,0x03,0x80,0xfc,0x4e,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x01,0x9a,0x07,0x80,0xec,0x7e,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x03,0xc2,0x06,0x01,0xe0,0x67,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x03,0x03,0x06,0x81,0x60,0x46,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x06,0x06,0x04,0x05,0x40,0x4e,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x06,0x06,0x04,0x07,0x40,0x1e,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x04,0x07,0x06,0x03,0x00,0x1f,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x0c,0x07,0xbe,0x03,0x80,0x03,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x08,0x06,0x63,0x82,0xc4,0x07,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x08,0x16,0x18,0xf2,0x7c,0x1e,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x08,0x16,0x02,0x1a,0xfe,0x30,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x18,0x06,0x04,0x0f,0x83,0x20,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x18,0x0c,0x00,0x06,0x71,0xe0,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x18,0x3a,0x41,0x86,0x00,0xe0,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x1c,0x70,0x00,0x06,0x00,0x60,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x1c,0xc0,0x03,0x0f,0x00,0x20,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x1e,0xc0,0x00,0x0f,0x04,0x20,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x0f,0x80,0x20,0xb6,0x86,0x70,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x0f,0x40,0x00,0xe4,0x80,0xb0,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x04,0x00,0x01,0x2c,0x40,0x70,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x04,0x40,0x00,0x4c,0x60,0x30,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x04,0x60,0x03,0x9e,0x50,0x90,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x04,0x20,0x06,0x5c,0x10,0x10,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x04,0x10,0x04,0xac,0x01,0x10,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x06,0x00,0x08,0x5c,0x00,0x90,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x06,0x20,0x00,0x9e,0x00,0x30,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x02,0x10,0x01,0x2c,0x01,0xb0,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x03,0x00,0x02,0x2a,0x00,0x20,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x01,0x00,0x06,0x2b,0x01,0x20,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x01,0x88,0x04,0x49,0x00,0x60,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x80,0x00,0x49,0x80,0x40,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0xc8,0x00,0x51,0x00,0x40,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x60,0x00,0x58,0x06,0xc0,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x22,0x00,0x58,0x00,0x80,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x30,0x00,0x40,0x08,0x80,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x18,0x00,0x40,0x05,0x80,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x0e,0x00,0x40,0x01,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x03,0x00,0x40,0x1b,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x01,0x80,0x60,0x06,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0xc0,0x00,0x24,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x60,0x00,0x0c,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x48,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x18,0x00,0x98,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x0c,0x44,0x30,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x06,0x1e,0x20,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x03,0x86,0xe0,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0xe3,0x80,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x7e,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    ,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
  
  };

void sendBitmap(const uint8_t *bitmap, uint8_t w, uint8_t h) {
  
  uint8_t icons[10][3];
  randomSeed(666);

  for (uint8_t f=0; f< 10; f++) {
    icons[f][0] = random(display.width());
    icons[f][1] = 0;
    icons[f][1] = random(5) + 1;
    
    Serial.print("x: ");
    Serial.print(icons[f][0], DEC);
    Serial.print(" y: ");
    Serial.print(icons[f][1], DEC);
    Serial.print(" dy: ");
    Serial.println(icons[f][1], DEC);
  }

  while (1) {
    // draw each icon
    for (uint8_t f=0; f< 10; f++) {
      display.drawBitmap(icons[f][0], icons[f][1], hearty100_bmp, w, h, WHITE);
    }
    display.display();
    delay(200);
    
    // then erase it + move it
    for (uint8_t f=0; f< 10; f++) {
      display.drawBitmap(icons[f][0], icons[f][1],  hearty100_bmp, w, h, BLACK);
      // move it
      icons[f][1] += icons[f][1];
      // if its gone, reinit
      if (icons[f][1] > display.height()) {
	icons[f][0] = random(display.width());
	icons[f][1] = 0;
	icons[f][1] = random(5) + 1;
      }
    }
   }
}

void sendString(String toSend) {
  display.setTextSize(1);
  display.setTextWrap(true);
  display.setTextColor(WHITE);
  display.setCursor(0,0);

  for(uint8_t i = 0; i<toSend.length(); i++){
    display.write(toSend[i]);
    display.display();
  }

}

void bootingPrint(void) {
  display.setTextSize(1);
  display.setTextWrap(true);
  display.setTextColor(WHITE);
  display.setCursor(0,0);

  String myString = "booting\ndevice";

  for(uint8_t i = 0; i<myString.length(); i++){
    display.write(myString[i]);
    display.display();
  }

}

void rebootingPrint(void) {
  display.setTextSize(1);
  display.setTextWrap(true);
  display.setTextColor(WHITE);
  display.setCursor(0,0);

  String myString = "reboot";

  for(uint8_t i = 0; i<myString.length(); i++){
    display.write(myString[i]);
    display.display();
  }

}

void pleaseWaitPrint(void) {
  display.setTextSize(1);
  display.setTextWrap(true);
  display.setTextColor(WHITE);
  display.setCursor(0,0);

  String myString = "please\nwait";

  for(uint8_t i = 0; i<myString.length(); i++){
    display.write(myString[i]);
  }

  display.display();

}

void testdrawcircle(void) {
  for (uint8_t i=0; i<display.height()/2; i+=2) {
    display.drawCircle(display.width()/2, display.height()/2, i, WHITE);
    display.display();
  }
}

void testdrawrect(void) {
  for (int16_t i=0; i<display.height()/2; i+=2) {
    display.drawRect(i, i, display.width()-2*i, display.height()-2*i, WHITE);
    display.display();
  }
}

void testdrawline() {  
  for (int16_t i=0; i<display.width(); i+=4) {
    display.drawLine(0, 0, i, display.height()-1, WHITE);
    display.display();
  }
  for (int16_t i=0; i<display.height(); i+=4) {
    display.drawLine(0, 0, display.width()-1, i, WHITE);
    display.display();
  }
  delay(250);
  
  display.clearDisplay();
  for (int16_t i=0; i<display.width(); i+=4) {
    display.drawLine(0, display.height()-1, i, 0, WHITE);
    display.display();
  }
  for (int16_t i=display.height()-1; i>=0; i-=4) {
    display.drawLine(0, display.height()-1, display.width()-1, i, WHITE);
    display.display();
  }
  delay(250);
  
  display.clearDisplay();
  for (int16_t i=display.width()-1; i>=0; i-=4) {
    display.drawLine(display.width()-1, display.height()-1, i, 0, WHITE);
    display.display();
  }
  for (int16_t i=display.height()-1; i>=0; i-=4) {
    display.drawLine(display.width()-1, display.height()-1, 0, i, WHITE);
    display.display();
  }
  delay(250);

  display.clearDisplay();
  for (int16_t i=0; i<display.height(); i+=4) {
    display.drawLine(display.width()-1, 0, 0, i, WHITE);
    display.display();
  }
  for (int16_t i=0; i<display.width(); i+=4) {
    display.drawLine(display.width()-1, 0, i, display.height()-1, WHITE); 
    display.display();
  }
  delay(250);
}

void clearAll(){

  display.clearDisplay();
  display.display();

}

void setup()   {                
  
  FastLED.addLeds<WS2812B, DATA_PIN, GRB>(leds, NUM_LEDS);

  display.begin();
  display.clearDisplay();
  display.setRotation(1);

  delay(15);

}

void boot(){

  for(int i = 0; i<NUM_LEDS; i++){

    leds[i] = CRGB(0,0,0);

  }

  FastLED.setBrightness(100);
  FastLED.show();

  clearAll();

  bootingPrint();
  delay(500);
  clearAll();

  testdrawrect();
  delay(500);
  clearAll();
  
  
  delay(500);

  for(int i=0;i<2;i++){
  pleaseWaitPrint();
  delay(500);
  clearAll();
  }

  for(int i = 0; i<NUM_LEDS; i++){

    leds[i] = CRGB(100+(50*i),0,0);
    delay(15);

  }

  FastLED.setBrightness(0);
  FastLED.show();
  delay(50);

  FastLED.setBrightness(25);
  FastLED.show();
  delay(200);

  FastLED.setBrightness(0);
  FastLED.show();
  delay(50);

  FastLED.setBrightness(50);
  FastLED.show();
  delay(200);

  FastLED.setBrightness(0);
  FastLED.show();
  delay(250);

  FastLED.setBrightness(75);
  FastLED.show();
  delay(200);

  FastLED.setBrightness(0);
  FastLED.show();
  delay(50);

  FastLED.setBrightness(100);
  FastLED.show();
  delay(200);
  
  FastLED.setBrightness(0);
  FastLED.show();
  delay(50);

  for(int i = 0; i<NUM_LEDS; i++){

    leds[i] = CRGB(0,0,0);
    delay(15);

  }

  FastLED.setBrightness(100);

  display.drawBitmap(-20,0, hearty100_bmp, 100, 100, WHITE);
  
  for(int i = 0; i<NUM_LEDS; i++){

    leds[i] = CRGB(100+(50*i),0,0);
    FastLED.show();
    delay(15);

  }

  display.display();
  delay(1000);

  for(int i = 100; i>0; i--){

    FastLED.setBrightness(i);
    FastLED.show();
    delay(50);

  }

  delay(100);

  clearAll();

  rebootingPrint();
  delay(100);
  clearAll();
  delay(1000);

}

int main(){

  init();
  setup();


  while(1){
  
    boot();

  }

  return 0;

}